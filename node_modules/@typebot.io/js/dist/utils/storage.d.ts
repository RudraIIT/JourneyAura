import { InitialChatReply } from '@/types';
export declare const getExistingResultIdFromStorage: (typebotId?: string) => string | undefined;
export declare const setResultInStorage: (storageType?: 'local' | 'session') => (typebotId: string, resultId: string) => void;
export declare const getInitialChatReplyFromStorage: (typebotId: string | undefined) => InitialChatReply | undefined;
export declare const setInitialChatReplyInStorage: (initialChatReply: InitialChatReply, { typebotId, storage, }: {
    typebotId: string;
    storage?: "session" | "local" | undefined;
}) => void;
export declare const setBotOpenedStateInStorage: () => void;
export declare const removeBotOpenedStateInStorage: () => void;
export declare const getBotOpenedStateFromStorage: () => boolean;
export declare const parseRememberUserStorage: (storage: 'local' | 'session' | undefined) => typeof localStorage | typeof sessionStorage;
export declare const wipeExistingChatStateInStorage: (typebotId: string) => void;
//# sourceMappingURL=storage.d.ts.map